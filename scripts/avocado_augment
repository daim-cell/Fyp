#!/usr/bin/env python
"""Augment a dataset using avocado"""

import argparse
from tqdm import tqdm

import avocado

def process_chunk(augmentor, chunk, args, verbose=True):
    # Load the reference dataset
    if verbose:
        print("Loading reference dataset...")
    dataset = avocado.load(
        args.reference_dataset,
        chunk=chunk,
        num_chunks=args.num_chunks,
    )

    # Augment the dataset
    if verbose:
        print("Augmenting the dataset...")
    augmented_dataset = augmentor.augment_dataset(
        args.augmented_dataset,
        dataset,
        args.num_augments,
    )

    # Save the augmented dataset
    if verbose:
        print("Saving the augmented dataset...")
    augmented_dataset.write()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument(
        'reference_dataset',
        help='Name of the reference dataset'
    )
    parser.add_argument(
        'augmented_dataset',
        help='Name of the augmented dataset'
    )
    parser.add_argument(
        '--num_augments',
        type=int,
        default=100,
        help='The number of times to use each object in the dataset as a '
        'reference for augmentation. Note that augmentation sometimes fails, '
        'so this is the number of tries, not the number of sucesses. '
        '(default: %(default)s)',
    )
    parser.add_argument(
        '--num_chunks',
        type=int,
        default=100,
        help='The dataset will be processed in chunks to avoid loading all of '
        'the data at once. This sets the total number of chunks to use. '
        '(default: %(default)s)',
    )
    parser.add_argument(
        '--chunk',
        type=int,
        default=None,
        help='If set, only process this chunk of the dataset. This is '
        'intended to be used to split processing into multiple jobs.'
    )

    args = parser.parse_args()

    # Load the augmentor. For now, we only have the PLAsTiCC augmentor although
    # this could be an option in the future.
    print("Loading augmentor...")
    augmentor = avocado.plasticc.PlasticcAugmentor()

    if args.chunk is not None:
        # Process a single chunk
        process_chunk(augmentor, args.chunk, args)
    else:
        # Process all chunks
        print("Processing the dataset in %d chunks..." % args.num_chunks)
        for chunk in tqdm(range(args.num_chunks), desc='Chunk',
                          dynamic_ncols=True):
            process_chunk(augmentor, chunk, args, verbose=False)

    print("Done!")
